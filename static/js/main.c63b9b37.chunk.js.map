{"version":3,"sources":["components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","components/Template.js","App.js","reportWebVitals.js","index.js"],"names":["TodoInsert","onAddTodo","useState","todoValue","setTodoValue","onChangeTodo","useCallback","e","target","value","onSubmit","preventDefault","className","type","placeholder","onChange","TodoListItem","todo","onClickTodo","onRemoveTodo","style","checked","onClick","id","text","React","memo","TodoList","todos","rowRenderer","index","key","width","height","rowCount","length","rowHeight","list","outline","createTodo","array","i","push","Template","setTodo","todoNum","useRef","concat","current","filter","v","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c63b9b37.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { MdAdd } from 'react-icons/md';\n\nfunction TodoInsert({ onAddTodo }) {\n  const [todoValue, setTodoValue] = useState('');\n\n  const onChangeTodo = useCallback((e) => {\n    setTodoValue(e.target.value);\n  }, []);\n\n  const onSubmit = (e) => {\n    onAddTodo(todoValue);\n    setTodoValue('');\n    e.preventDefault();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"todo-insert\">\n        <input\n          className=\"todo-input\"\n          type=\"text\"\n          placeholder=\"할 일을 입력하세요\"\n          value={todoValue}\n          onChange={onChangeTodo}\n        />\n        <button className=\"todo-btn-add\" type=\"submit\">\n          <MdAdd />\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default TodoInsert;\n","import React from 'react';\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdRemoveCircleOutline } from 'react-icons/md';\n\nfunction TodoListItem({ todo, onClickTodo, onRemoveTodo, style }) {\n  return (\n    <li key={todo.id} className={todo.checked ? 'checked' : ''} style={style}>\n      <div className=\"todo-check\" onClick={() => onClickTodo(todo.id)}>\n        {todo.checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n      </div>\n      <span>{todo.text}</span>\n      <div className=\"todo-remove\" onClick={() => onRemoveTodo(todo.id)}>\n        <MdRemoveCircleOutline />\n      </div>\n    </li>\n  );\n}\n\n// export default TodoListItem;\nexport default React.memo(TodoListItem);\n","import React, { useCallback } from 'react';\nimport { List } from 'react-virtualized';\nimport TodoListItem from './TodoListItem';\n\nfunction TodoList({ todos, onRemoveTodo, onClickTodo }) {\n  const rowRenderer = useCallback(\n    ({ index, key, style }) => {\n      const todo = todos[index];\n      return (\n        <TodoListItem\n          todo={todo} // todo 한 개씩 전달\n          key={key}\n          onRemoveTodo={onRemoveTodo}\n          onClickTodo={onClickTodo}\n          style={style}\n        />\n      );\n    },\n    [onRemoveTodo, onClickTodo, todos],\n  );\n  return (\n    <div className=\"todo-list\">\n      <ul>\n        <List\n          width={512} // 전체 너비\n          height={512} // 전체 높이\n          rowCount={todos.length} // 항목 개수\n          rowHeight={40} // 항목 높이\n          rowRenderer={rowRenderer} // 항목을 렌더링할 때 쓰는 함수\n          list={todos} // 배열\n          style={{ outline: 'none' }} // List에 기본 적용되는 outline 스타일 제거\n        />\n      </ul>\n    </div>\n  );\n}\n\nexport default React.memo(TodoList);\n","import React, { useState, useCallback, useRef } from 'react';\nimport './Template.css';\nimport TodoInsert from './TodoInsert';\nimport TodoList from './TodoList';\n\nfunction createTodo() {\n  const array = [];\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      checked: false,\n      text: `abc${i}`,\n    });\n  }\n  return array;\n}\n\nfunction Template() {\n  const [todos, setTodo] = useState(createTodo);\n\n  const todoNum = useRef(1);\n\n  const onAddTodo = useCallback((todoValue) => {\n    setTodo((todos) => todos.concat({ id: todoNum.current, checked: false, text: todoValue }));\n    todoNum.current++;\n  }, []);\n\n  const onRemoveTodo = useCallback((id) => {\n    setTodo((todos) => todos.filter((v) => v.id !== id));\n  }, []);\n\n  const onClickTodo = useCallback((id) => {\n    setTodo((todos) =>\n      todos.map((todo) => (todo.id === id ? { ...todo, checked: !todo.checked } : todo)),\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"todo-header\">일정 관리</div>\n      <TodoInsert onAddTodo={onAddTodo} />\n      <TodoList todos={todos} onRemoveTodo={onRemoveTodo} onClickTodo={onClickTodo} />\n    </div>\n  );\n}\n\nexport default Template;\n","import React from 'react';\nimport './App.css';\nimport Template from './components/Template';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Template />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}